{
  "unpublishedCollection": {
    "name": "trackedPlayerStore",
    "pageId": "search players",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tTRACKED_PLAYERS : \"TRACKED_PLAYERS\",\n\tPLAYERS_DATA : \"PLAYERS_DATA\",\n\tCURRENT_PLAYER : \"CURRENT_PLAYER\",\n\tIS_CURRENT_PLAYER_VALID : \"IS_CURRENT_PLAYER_VALID\",\n\n\n\taddPlayerToTrack: async () => {\n\n\t\tif (appsmith.store[trackedPlayerStore.TRACKED_PLAYERS] === undefined){\n\t\t\tawait storeValue(trackedPlayerStore.TRACKED_PLAYERS, [])\n\t\t}\n\n\t\tvar toAdd = titledPlayers.triggeredRow.name\n\t\tif (toAdd !== undefined){\n\t\t\tvar playerset = new Set(appsmith.store[trackedPlayerStore.TRACKED_PLAYERS]);\n\t\t\tplayerset.add(toAdd)\n\t\t\tawait storeValue(trackedPlayerStore.TRACKED_PLAYERS, Array.from(playerset))\n\t\t}\n\t},\n\n\tfindPlayerFromDbOrApi : async () => {\n\t\tvar ps_d = appsmith.store[trackedPlayerStore.PLAYERS_DATA]\n\t\tvar curr_p = appsmith.store[trackedPlayerStore.CURRENT_PLAYER]\n\t\tif (ps_d === undefined){\n\t\t\tps_d = {}\n\t\t\tvar res1 = await chess_com_player.run().catch(() => {\n\n\t\t\t})\n\t\t\tps_d[curr_p] = res1\n\n\t\t\tawait storeValue(trackedPlayerStore.PLAYERS_DATA, ps_d)\n\t\t} else {\n\t\t\tif ( curr_p in ps_d) {\n\n\t\t\t\treturn ps_d[curr_p]\n\t\t\t} else {\n\t\t\t\tvar res = await chess_com_player.run().catch(() => {\n\n\t\t\t\t})\n\t\t\t\tps_d[curr_p] = res\n\t\t\t\tawait storeValue(trackedPlayerStore.PLAYERS_DATA, ps_d)\n\t\t\t}\n\t\t}\n\t\treturn appsmith.store[trackedPlayerStore.PLAYERS_DATA][curr_p]\n\n\t},\n\n\tisValidPlayer : async() => {\n\t\tvar temp = await trackedPlayerStore.findPlayerFromDbOrApi()\n\t\tvar curr_p = appsmith.store[trackedPlayerStore.CURRENT_PLAYER]\n\t\tvar res =  temp !== undefined && appsmith.store[trackedPlayerStore.PLAYERS_DATA][curr_p] !== undefined\n\t\tif (res === true) {\n\t\t\tawait storeValue(trackedPlayerStore.IS_CURRENT_PLAYER_VALID, true)\n\t\t} else {\n\t\t\tawait storeValue(trackedPlayerStore.IS_CURRENT_PLAYER_VALID, false)\n\t\t}\n\t\treturn res\n\t},\n\n\tupdatePlayerOnKeyPresss : async () => {\n\t\tawait storeValue(trackedPlayerStore.CURRENT_PLAYER, Input1.text)\n\t\tawait trackedPlayerStore.isValidPlayer()\n\t},\n\t\n\t\n\t\n\t\n\taddPlayerToTrackFromInput: async () => {\n\n\t\tif (appsmith.store[trackedPlayerStore.TRACKED_PLAYERS] === undefined){\n\t\t\tawait storeValue(trackedPlayerStore.TRACKED_PLAYERS, [])\n\t\t}\n\n\t\tvar toAdd = Input1.text\n\t\tif (toAdd !== undefined){\n\t\t\tvar playerset = new Set(appsmith.store[trackedPlayerStore.TRACKED_PLAYERS]);\n\t\t\tplayerset.add(toAdd)\n\t\t\tawait storeValue(trackedPlayerStore.TRACKED_PLAYERS, Array.from(playerset))\n\t\t}\n\t},\n}",
    "variables": [
      {
        "name": "TRACKED_PLAYERS",
        "value": "\"TRACKED_PLAYERS\""
      },
      {
        "name": "PLAYERS_DATA",
        "value": "\"PLAYERS_DATA\""
      },
      {
        "name": "CURRENT_PLAYER",
        "value": "\"CURRENT_PLAYER\""
      },
      {
        "name": "IS_CURRENT_PLAYER_VALID",
        "value": "\"IS_CURRENT_PLAYER_VALID\""
      }
    ],
    "userPermissions": []
  },
  "id": "search players_trackedPlayerStore",
  "deleted": false,
  "gitSyncId": "635935170e05b60ea4e807f7_63595cd90ebeca6fa7984d06"
}