{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "getPlayerGamesData",
    "fullyQualifiedName": "trackedPlayerStore.getPlayerGamesData",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "track players",
    "collectionId": "track players_trackedPlayerStore",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  await storeValue(trackedPlayerStore.PLAYER_GAMES_LOADING, true);\n  var playername = trackedPlayerStore.getPlayerToView();\n  if (playername !== undefined) {\n    await storeValue(trackedPlayerStore.CURRENT_PLAYER, playername);\n  }\n  var res = await chess_com_player_month_games.run();\n  if (res === undefined || res.length === 0 || res.games.length === 0) {\n    await storeValue(trackedPlayerStore.CURRENT_PLAYER_NOW_MONTH_GAMES, undefined);\n    await storeValue(trackedPlayerStore.PLAYER_GAMES_LOADING, false);\n    return undefined;\n  }\n  await storeValue(trackedPlayerStore.CURRENT_PLAYER_NOW_MONTH_GAMES, res.games.reverse());\n  await storeValue(trackedPlayerStore.PLAYER_GAMES_LOADING, false);\n  return res.games.reverse();\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  await storeValue(trackedPlayerStore.PLAYER_GAMES_LOADING, true);\n  var playername = trackedPlayerStore.getPlayerToView();\n  if (playername !== undefined) {\n    await storeValue(trackedPlayerStore.CURRENT_PLAYER, playername);\n  }\n  var res = await chess_com_player_month_games.run();\n  if (res === undefined || res.length === 0 || res.games.length === 0) {\n    await storeValue(trackedPlayerStore.CURRENT_PLAYER_NOW_MONTH_GAMES, undefined);\n    await storeValue(trackedPlayerStore.PLAYER_GAMES_LOADING, false);\n    return undefined;\n  }\n  await storeValue(trackedPlayerStore.CURRENT_PLAYER_NOW_MONTH_GAMES, res.games.reverse());\n  await storeValue(trackedPlayerStore.PLAYER_GAMES_LOADING, false);\n  return res.games.reverse();\n}"
    ],
    "userSetOnLoad": true,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "track players_trackedPlayerStore.getPlayerGamesData",
  "deleted": false,
  "gitSyncId": "635935170e05b60ea4e807f7_635be4998e104a35881ffe3d"
}